#!/bin/bash

cantidadRegistrosLeidos=0
cantidadRegistrosAceptados=0
cantidadRegistrosRechazadosPorOCompCerrada=0
cantidadRegistrosRechazadosPorOCompInexistente=0
cantidadRegistrosRechazadosPorOtrosMotivos=0

# Inicializar el log grabando inicio de invreci y la cantidad de archivos a procesar

#Si NO esta inicializado el ambiente
if [ -z $SISTEMA_INICIALIZADO ]
then
    echo Error: El ambiente no fue inicializado, no se continua con la ejecucion de invreci.
    Glog invreci "El ambiente no fue inicializado, no se continua con la ejecucion de invreci " W
    exit 1
fi

# Verifica que no exista un proceso invreci corriendo
bloquearProceso "$0"
if [ $? -ne 0 ]
then
    echo Ya existe un proceso invreci corriendo, se termina la ejecucion.
    Glog invreci "Ya existe un proceso invreci corriendo, se termina la ejecucion." W
    exit 1
fi

rechazarRegistro(){

    echo $1 >> "$grupo"/rechazados/$2.rech

}

#Devuelve 0 si el registro es valido.
#	  1 si es rechazado por orden de compra cerrada
#	  2 si es rechazado por orden de compra inexistente
#	  3 si es rechazado por numero de CUIT invalido
validarRegistro(){

    local registroAValidar=$1
    local nombreArchivo=$2
    local ordendecompra=` echo $registroAValidar | cut -d ';' -f 1`
    local cuitProveedor=` echo $registroAValidar | cut -d ';' -f 9`

    echo Se valida el siguiente registro : "$registroAValidar" 
    Glog invreci "$registroAValidar" i
    Glog invreci "Se procesa la orden de compra # $ordendecompra" i

    local archivosAProcesar2=`ls "$grupo"/oc/ -1 | wc -l`
    if [ $archivosAProcesar2 -eq 0 ]
    then
	Glog invreci "No existen archivos de orden de compra para procesar, se suspende la ejecucion de invreci" e
	echo "No existen archivos de orden de compra para procesar, se suspende la ejecucion de invreci"
	exit 1
    fi
    
    #Se busca la ultima orden de compra global
    ultimoArchivo=0
    for archivoOrdenCompra in "$grupo/oc/ocgob."*
    do
	actual=${archivoOrdenCompra##*.}
	if [ $ultimoArchivo -lt $actual ]
	then
	    ultimoArchivo=$actual
	fi
    done

    #Validacion del formato del registro
    local registroOrdenDeCompra=`grep -h "^$ordendecompra" "$grupo/oc/ocgob.$ultimoArchivo"` #Esto devuelve una lista o nada.
    
    if [ "$registroOrdenDeCompra" != "" ] 
    then
	echo "El registro de orden de compra es: $registroOrdenDeCompra"
	if [  "`echo $registroOrdenDeCompra | cut -d ';' -f 4`" = "CERRADA" ]
	then
	  echo La orden de compra $ordendecompra esta cerrada, se rechaza el registro  
	  Glog invreci "La orden de compra $ordendecompra esta cerrada, se rechaza el registro" e		
	  rechazarRegistro "$registroAValidar" "$nombreArchivo"
	  local cantidadRegistrosRechazadosPorOCompCerrada=$(( $cantidadRegistrosRechazadosPorOCompCerrada + 1))
	  return 1
	elif [ "$cuitProveedor" != "`echo $registroOrdenDeCompra | cut -d ';' -f 3`" ] 
	then
	    echo "El CUIT "`echo $registroOrdenDeCompra | cut -d ';' -f 3`" es invalido, se rechaza el registro (se esperaba $cuitProveedor)"
	    Glog invreci "El CUIT es invalido, se rechaza el registro" e
	    rechazarRegistro "$registroAValidar" "$nombreArchivo"
	    cantidadRegistrosRechazadosPorOtrosMotivos=$(($cantidadRegistrosRechazadosPorOtrosMotivos + 1))
	    return 3
	else
	  #Validacion correcta
	    echo "Se acepta el registro"
	    Glog invreci "Se acepta el registro" e
	    return 0
	fi		
     fi
    
    echo "La orden de compra $ordendecompra no existe, se rechaza el registro"
    Glog invreci "La orden de compra #$ordendecompra no existe, se rechaza el registro"	e
    rechazarRegistro "$registroAValidar" "$nombreArchivo" 
    cantidadRegistrosRechazadosPorOCompInexistente=$(($cantidadRegistrosRechazadosPorOCompInexistente +1))
    return 2
}


#Comienzo :
#Guarda en el log "Inicio de Invreci: <cantidad de archivos a procesar>

archivosAProcesar=`ls "$grupo"/recibidos/ -1 | wc -l`
Glog invreci "Inicio de Invreci: Archivos a procesar : <$archivosAProcesar> " i
echo
echo "Inicio de Invreci: Archivos a procesar : <$archivosAProcesar> "
echo

if [ $archivosAProcesar -eq 0 ]
then
    Glog invreci "No existen archivos para procesar, se suspende la ejecucion de invreci" e
    echo "No existen archivos para procesar, se suspende la ejecucion de invreci"
    exit 1
fi

for archivoRecibido in "$grupo/recibidos/"*
do  
    archivo=`basename "$archivoRecibido"`

    Glog invreci "Archivo a procesar: <$archivo>" i
    Glog invreci "-------------------------------" i
    echo "================================================"
    echo "Archivo a procesar: <$archivo>"
    echo
	
    

    if [ -e "$grupo"/yarecibidos/$archivo ]
    then 
	
	Glog invreci "Remito Rechazado Por Duplicado: <$archivo>" w
	echo "Remito Rechazado Por Duplicado: <$archivo>"
	Mover $archivoRecibido "$grupo"/rechazados/ invreci

    else
	cantidadRegistrosLeidos=0
	cantidadRegistrosAceptados=0
	cantidadRegistrosRechazadosPorOCompCerrada=0
	cantidadRegistrosRechazadosPorOCompInexistente=0
	cantidadRegistrosRechazadosPorOtrosMotivos=0
 	cantidadRegistrosLeidos=$cantidadRegistrosRechazadosPorOtrosMotivos

	#Rechaza un registro porque el formato es invalido
        RechazadosFormato=`grep -v "^[0-9]\{6\};.\{10\};[0-9]*;[0-9]*;[0-9]*\.\?[0-9]*;[0-9]\{8\};.\{11\};.\{11\};.\{11\};.\{11\}$" $archivoRecibido`

	if [ $? -eq 0 ] && [ ! -z $RechazadosFormato ]
	then
           echo "Los registros rechazados por formato invÃ¡lido son :"
           echo $RechazadosFormato
	   echo $RechazadosFormato >> "$grupo"/rechazados/${archivo}.rech 
           cantidadRegistrosRechazadosPorOtrosMotivos=`wc -l "$grupo"/rechazados/${archivo}.rech | cut -d ' ' -f 1` 
	fi
	
     	for registro in `grep '^[0-9]\{6\};.\{10\};[0-9]*;[0-9]*;[0-9]*\.\?[0-9]*;[0-9]\{8\};.\{11\};.\{11\};.\{11\};.\{11\}$' $archivoRecibido | sed 's/ /_/g'`
	do

	    cantidadRegistrosLeidos=$(($cantidadRegistrosLeidos + 1))
	    echo "--------------------------------------"
	    validarRegistro "$registro" "$archivo"
	    Glog invreci "-------------------------------" i
	    
	    if [ "$?" -eq 0 ]
	    then 
		numeroremito=${archivo%%.*}
		fecha=${archivo##*.}
		numeroordencompra=` echo $registro | cut -d ';' -f 1`
		cantidadRegistrosAceptados=$(($cantidadRegistrosAceptados + 1))

		registro=`echo $registro | sed "s/^[^;]*;/${fecha};/"`

		echo "$registro" >> "$grupo"/aceptados/${numeroremito}.${numeroordencompra}.aproc

	    fi 
	done
	Mover $archivoRecibido "$grupo"/yarecibidos/ invreci 
    fi
    
    if [ $cantidadRegistrosLeidos -eq 0 ]
    then
	Glog invreci " -Remito Rechazado Por Archivo Vacio: <$archivo> " i
	echo "-Remito Rechazado Por Archivo Vacio:<$archivo> "
    else
	Glog invreci "-Remito Aceptado:<$archivo> " i
	Glog invreci "-Cantidad de Registros Leidos: $cantidadRegistrosLeidos " i
	Glog invreci "-Cantidad de Registros Aceptados: $cantidadRegistrosAceptados " i
	Glog invreci "-Cantidad Registros Rechazados por Orden de Compra Cerrada: $cantidadRegistrosRechazadosPorOCompCerrada " i
	Glog invreci "-Cantidad De Registros Rechazados por Orden de Compra Inexistente: $cantidadRegistrosRechazadosPorOCompInexistente " i
	Glog invreci "-Cantidad de Registros Rechazados por Otros Motivos: $cantidadRegistrosRechazadosPorOtrosMotivos " i
	echo "--------------------------------------


Resumen del procesamiento del remito:

	 -Remito Aceptado:<$archivo> 
	 -Cantidad de Registros Leidos: $cantidadRegistrosLeidos 
         -Cantidad de Registros Aceptados: $cantidadRegistrosAceptados 
         -Cantidad Registros Rechazados por Orden de Compra Cerrada: $cantidadRegistrosRechazadosPorOCompCerrada 
         -Cantidad De Registros Rechazados por Orden de Compra Inexistente: $cantidadRegistrosRechazadosPorOCompInexistente 
         -Cantidad de Registros Rechazados por Otros Motivos: $cantidadRegistrosRechazadosPorOtrosMotivos 
	" 
    fi
done

Glog invreci "Fin de Invreci" i

# Se elimine el archivo de lock
desbloquearProceso "$0"
