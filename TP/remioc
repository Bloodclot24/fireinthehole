#!/usr/bin/perl

# Salidas:  0 - OK
#           1 - Sistema no inicializado
#           2 - Ya existe otro proceso remioc
#           3 - Existe un proceso invreci corriendo
#           4 - No se encuentra el archivo de ordenes de compra global
#           5 - Error de parámetros. Se espera un numero de orden de compra (6 caracteres) o de remito (8 caracteres).
#           6 - Todas las ordenes de compra a procesar estan cerradas.
#           7 - No existen remitos disponibles para las ordenes de compra especificadas.
#           8 - No se eligió ningún remito.
#           9 - No se encontró el archivo de descripción de ordenes de compra.
#           10 - No se especifico ningun remito u orden de compra.
#           11 - No se pudo abrir el archivo de detalle. Las operaciones no se terminaron.
#           12 - No se pudo crear un nuevo archivo de detalle. Las operaciones no se terminaron.
#           13 - No se pudo abrir el archivo global de orden de compra. Las operaciones no se terminaron.
#           14 - No se pudo crear un nuevo archivo global de orden de compra. Las operaciones no se terminaron.


use strict;

$0="remioc";

my $SISTEMA_INICIALIZADO = $ENV{'SISTEMA_INICIALIZADO'};
my $grupo = $ENV{'grupo'};

if(!$SISTEMA_INICIALIZADO){
    print "El sistema no esta inicializado.\n";
    exit 1;
}


sub Glog{
    my $mensaje=shift(@_);
    my $tipo=shift(@_);
    $mensaje =~ s/ /\\ /g;
    `/bin/bash -c "Glog $0 $mensaje $tipo"`;
}


`/bin/bash -c "bloquearProceso $0"`;
if( $? != 0 ){
    print "Error: Ya existe un proceso remioc corriendo.\n";
    &Glog("Ya existe un proceso remioc corriendo.", "SE");
    exit 2;
}

`/bin/bash -c "estaCorriendo invreci"`;
if( $? == 0 ){
    `/bin/bash -c "desbloquearProceso $0"`;
    print "Error: Ya existe un proceso invreci corriendo.\n";
    &Glog("Ya existe un proceso invreci corriendo.", "SE");
    exit 3;
}

#busca todos los remitos que tienen el numero de orden de compra
#especificado
sub buscarRemitos{
    # $1 -> numero de OC
    my $NUMERO = shift(@_);

    opendir(DIR, "$grupo/aceptados/");
    my @RDISPONIBLES = grep(/.*\.$NUMERO\.aproc$/,readdir(DIR));
    closedir(DIR);
    
    foreach (@RDISPONIBLES) {
	&Glog("Remito disponible: $_", "I");
    }

    return @RDISPONIBLES;
}

#Da al usuario la posibilidad de elegir de entre todos los remitos,
#cuáles quiere procesar
sub elegirRemitos(){

    return () if ($#_+1 == 0);

    my $FILAS;
    my %ARCHIVOS;
    foreach (@_){
	(my $CODIGO) = $_;
	if($CODIGO){
	    $FILAS .= "$CODIGO - dummy ";
	    $ARCHIVOS{$CODIGO} = $_;
	}
    }

    my $ELEGIDOS=`dialog  --checklist \"Lista de remitos\"  24 50 12 $FILAS --stdout 2>/dev/null`;

    return () if $? != 0;

    (my @TEMPORAL) = $ELEGIDOS =~ /"([^"]*)"/g;
    my @RELEGIDOS;

    foreach (@TEMPORAL){
	push(@RELEGIDOS, $ARCHIVOS{$_});
    }

    foreach (@RELEGIDOS) {
	
	&Glog("Remito elegido: $_", "I");
    }
    return @RELEGIDOS
}

#Busca el ultimo archivo de ordenes de compra 
sub buscarUltimaOC(){
    #$_[0] -> ocgob o ocdet
    my $INICIAL=01;
    my $NUMERO=0;
    my $otrogrupo = $grupo;
    $otrogrupo =~ s/ /\\ /g;
    my @CANDIDATOS = <$otrogrupo/oc/$_[0].*>;

    foreach (@CANDIDATOS){

	($NUMERO) = $_ =~ /\.([0-9]*)$/;
	
	if($NUMERO >= $INICIAL){
	    $INICIAL=$NUMERO;
	}
    }

    return $NUMERO;
}

#Procesa la orden de compra con los remitos elegidos.
sub procesarOrden{
    
    my $OCDET = shift(@_);
    my (@NUMEROORDEN) = @{$_[0]};
    my (@REMITOS) = @{$_[1]};


    my %ORDENES;
    @ORDENES{@NUMEROORDEN} = ();

    
    # extraigo la información de todos los productos de los remitos
    my %PRODUCTOS = ();
    for my $origen (@REMITOS){

    	(my $destino) = $origen =~ /^(.*)\.aproc$/;
    	$destino .= ".proc";
    	&Glog("Renombrando aceptados/$origen a aceptados/$destino", "I");
    	if (! rename "$grupo/aceptados/$origen", "$grupo/aceptados/$destino"){
    	    &Glog("No se puede renombrar aceptados/$origen a aceptados/$destino", "SE");
	    next; #salteo el remito (no lo proceso)
    	}

    	if(open(my $archivo, '<', "$grupo/aceptados/$destino")){
	    while(<$archivo>){
		my $CODPROD = $_;
		($CODPROD) = $CODPROD =~ /^[^;]*;([^;]*);/;
		my $CANTIDAD = $_;
		($CANTIDAD) = $CANTIDAD =~ /^[^;]*;[^;]*;([^;]*);/;

		#para el hash, uso la clave: NumeroOrdenDeCompra+CodigoProducto
		(my $CLAVE) = $destino =~ /^[^.]*\.([^.]*)\..*$/;
		$CLAVE .= $CODPROD;
		$PRODUCTOS{$CLAVE} += $CANTIDAD;

	    }

	    close $archivo;

	}
	else{
	    print "Error: No se puede abrir $grupo/aceptados/$destino, se saltea.\n";
	    &Glog("No se puede abrir $grupo/aceptados/$destino, se saltea.", "SE");
	}
	
    }

    #ahora, genero un nuevo OCDET y voy procesando los productos
    my %DEBOCERRAR;
    @DEBOCERRAR{@NUMEROORDEN} = ();

    (my $OCDET2) = $OCDET =~ /^(.*)\..*$/;
    (my $NUMERO) = $OCDET =~ /^.*\.(.*)$/;

    $NUMERO++;
    $NUMERO = sprintf "%.2i",($NUMERO);
    $OCDET2 .= ".$NUMERO";

    my ($archivo,$archivo2);

    if (! open $archivo, '<', $OCDET){
	print "Error: No se pudo abrir el archivo de detalle. Las operaciones no se terminaron.\n";
	&Glog("No se pudo abrir el archivo de detalle. Las operaciones no se terminaron.", "SE");
	return 11;
    }
    if (! open $archivo2, '>', $OCDET2){
	print "Error: No se pudo crear un nuevo archivo de detalle. Las operaciones no se terminaron.\n";
	&Glog("No se pudo crear un nuevo archivo de detalle. Las operaciones no se terminaron.", "SE");
	return 12;
    }

    while(my $linea = <$archivo>){
	
	(my $CODIGOORDEN) = $linea =~ "^([^;]*);";
	
    	if( exists $ORDENES{$CODIGOORDEN} ){
    	    #la linea es parte de la orden de compra que me interesa (alguna)
    	    (my $CODPROD, my $REMANENTE) = $linea =~ "^[^;]*;[^;]*;([^;]*);[^;]*;([^;]*);";

	    my $CLAVE = $CODIGOORDEN;
	    $CLAVE .= $CODPROD;

    	    my $ESTADO = "ABIERTO";
    	    if($REMANENTE <= $PRODUCTOS{$CLAVE}){
    		$PRODUCTOS{$CLAVE} -= $REMANENTE;
    		$REMANENTE=0;
    		$ESTADO = "CERRADO";
    	    }
    	    else{
    		$REMANENTE -= $PRODUCTOS{$CLAVE};
    		$PRODUCTOS{$CLAVE} = 0;
		delete $DEBOCERRAR{$CODIGOORDEN};
    	    }
	    my $usuario=`/bin/bash -c getUsuario`;
	    my $fecha=`/bin/bash -c getFechaYHora`;
	    
    	    $linea =~ s/^([^;]*;[^;]*;[^;]*;[^;]*);[^;]*;[^;]*;.*$/$1;$REMANENTE;$ESTADO;$usuario;$fecha/;
	    
    	    print $archivo2 $linea;
    	}
    	else{
    	    #la linea no me interesa, la guardo sin modificarla
    	    print $archivo2 $linea;
    	}
    }

    close $archivo;
    close $archivo2;
    
    mkdir "$grupo/sobrantes/";
    my $abierto = open my $archivoSobrante, ">>", "$grupo/sobrantes/sobrante.sob";
    for my $clave (keys %PRODUCTOS){
    	if($PRODUCTOS{$clave} > 0){
	    (my $CODIGOORDEN) = $clave =~ /^(......)/;
	    (my $CODIGOPROD) = $clave =~ /(..........)$/;
    	    print "Error: sobraron $PRODUCTOS{$clave} unidades del producto $CODIGOPROD, en la orden de compra $CODIGOORDEN\n";
    	    &Glog("Sobraron $PRODUCTOS{$clave} unidades del producto $CODIGOPROD, cuando se intentaba conciliar la orden de compra $CODIGOORDEN", "E");
	    if($abierto){
		my $usuario=`/bin/bash -c getUsuario`;
		my $fecha=`/bin/bash -c getFechaYHora`;
		print $archivoSobrante "$CODIGOORDEN;$CODIGOPROD;$PRODUCTOS{$clave};$usuario;$fecha\n";
	    }
    	}
    }

    #Me fijo si tengo que cerrar alguna orden de compra en el global
    my @claves = keys %DEBOCERRAR;
    if( @claves > 0 ){

	my $NUMERO = &buscarUltimaOC("ocgob");
	my $OCGOB = "$grupo/oc/ocgob.$NUMERO";
	$NUMERO++;
	$NUMERO = sprintf "%.2i",($NUMERO);
	my $OCGOB2 = "$grupo/oc/ocgob.$NUMERO";
	
	my ($archivo,$archivo2);

	if (!open $archivo, '<', $OCGOB){
	    print "Error: No se pudo abrir el archivo global de orden de compra. Las operaciones no se terminaron.\n";
	    &Glog("No se pudo abrir el archivo global de orden de compra. Las operaciones no se terminaron.", "SE");
	    return 13;
	}

	if (!open $archivo2, '>', $OCGOB2){
	    print "Error: No se pudo crear un nuevo archivo global de orden de compra. Las operaciones no se terminaron.\n";
	    &Glog("No se pudo crear un nuevo global de orden de compra. Las operaciones no se terminaron.", "SE");
	    return 14;
	}


	while(my $linea = <$archivo>){
	    (my $CODIGOORDEN) = $linea =~ "^([^;]*);";
	    
	    if( exists $DEBOCERRAR{$CODIGOORDEN}){
		#me interesa esta linea. La cierro
		
		my $usuario=`/bin/bash -c getUsuario`;
		my $fecha=`/bin/bash -c getFechaYHora`;

		$linea =~ s/^([^;]*;[^;]*;[^;]*);[^;]*;.*$/$1;CERRADA;$usuario;$fecha/;
		print $archivo2 $linea;
	    }
	    else{
		#no me interesa la linea, la dejo como está.
		print $archivo2 $linea;
	    }
	    
	}
	
	close $archivo;
	close $archivo2;
    }
}

sub main{

#Inicializar el log
    &Glog("Inicio de $0: @ARGV", "I");

    my $PARAMETRO;
    my $NUMERO;
    my @OC;
    my $OCDET;
    my $OCGOB;
    my $ULTIMO;
    my @REMITOS;
    my $FLAGREMITOS=0;

    $ULTIMO=&buscarUltimaOC("ocgob");
    if (! $ULTIMO){
	print "Error: No existe el archivo global de ordenes de compra $ULTIMO.\n";
	&Glog("No existe el archivo global de ordenes de compra.", "E");
	return 4;
    }
    $NUMERO=$PARAMETRO;

#Por cada parametro, miro si tiene 6 u 8 caracteres. Si tiene 6, me
#guardo el numero como una orden de compra a procesar. Si tiene 8, lo
#tomo como un numero de remito y busco si existe. Si existe, me guardo
#el numero de remito y el numero de orden de compra asociada.

    foreach $PARAMETRO (@ARGV){

	if(length($PARAMETRO) == 6){
	    push (@OC, $PARAMETRO);
	}
	elsif(length($PARAMETRO) == 8){

	    opendir my $DIRECTORIO, "$grupo/aceptados/";

	    
	    my @archivos = readdir $DIRECTORIO;
	    closedir $DIRECTORIO;
	    @archivos = grep(/$PARAMETRO\..*\.aproc/, @archivos);

	    my $archivo;

	    foreach $archivo (@archivos){
		if( -e "$grupo/aceptados/$archivo" ){
		    ($NUMERO) = $archivo =~ /$PARAMETRO\.([0-9]{6})\.aproc$/;
		    push (@OC, $NUMERO);
		    $FLAGREMITOS=1;
		    push(@REMITOS , "$PARAMETRO.$NUMERO.aproc");
		    
		}
		else{
		    print "Error: no existe el remito $NUMERO (archivo $archivo).\n";
		}
	    }

	}
	else{
	    print "Error: '$PARAMETRO', no identifica una orden de compra o remito.\n";
	    return 5;
	}
    }

    if( $#ARGV == -1 ){
	#busco todos los remitos

	opendir my $directorio,"$grupo/aceptados/";

	my @archivos = readdir($directorio);
	closedir($directorio);

	foreach (@archivos){

	    next if !( $_ =~ /[0-9]{8}\.[0-9]{6}\.aproc/);
	    
	    ($NUMERO) = $_ =~ /[0-9]{8}\.([0-9]{6})\.aproc$/;
	    push (@OC, $NUMERO);
	    push(@REMITOS , "$_");
	}

	if(@REMITOS){
	    print "Se procesarán los siguientes remitos: @REMITOS\n";
	}
	
    }

    $OCGOB="$grupo/oc/ocgob.$ULTIMO";

#Si tenemos alguna orden de compra
    if( @OC ){
	#Verifico que esté abierta

	my @aux=@OC;
	@OC = ();
	#verifico que las ordenes de compra elegidas esten abiertas.
	foreach (@aux){
	    `grep "^$_;[0-9]\\{8\\};[0-9]\\{11\\};ABIERTA;.*" "$OCGOB"`;
	    if( $? == 0 ){
		push(@OC, $_);
	    }
	    else{
		print "Error: La orden de compra $_, no está abierta.\n";
		&Glog("La orden de compra $_, no está abierta.", "E");
	    }
	}

	if(!@OC){
	    print "Todas las ordenes de compra especificadas estan cerradas.\n";
	    &Glog("Todas las ordenes de compra especificadas estan cerradas.", "I");
	    return 6;
	}

	if(! $FLAGREMITOS){ #Si la invocacion del programa no incluyó remitos
	    foreach (@OC){
		#Busco los remitos que se corresponden a cada orden de compra
		my @RDISPONIBLES = &buscarRemitos($_);
		if( ! @RDISPONIBLES){
		    print "No hay remitos disponibles para la orden de compra $NUMERO\n";
		    &Glog("No hay remitos disponibles para la orden de compra $NUMERO.", "I");
		}
		else{
		    push(@REMITOS, @RDISPONIBLES);
		}
	    }
	}

	my %auxiliar;
	@auxiliar{@REMITOS} = ();

	@REMITOS = keys %auxiliar;

	if( ! @REMITOS ) {
	    print "No hay remitos disponibles para las ordenes de compra solicitadas (@OC).\n";
	    &Glog("No hay remitos disponibles para las ordenes de compra solicitadas (@OC).", "I");
	    return 7;
	}

	&Glog("Conciliación de la orden de compra @OC.", "I");

	if(! $FLAGREMITOS){ #Si la invocacion del programa no incluyó remitos
	    #Dejo al usuario elegir los remitos a procesar
	    @REMITOS = &elegirRemitos(@REMITOS);
	}


	if( ! @REMITOS){
	    print "No se eligió ningun remito.\n";
	    return 8;
	}

	#Busco el ultimo archivo de descripción de ordenes de compra
	$ULTIMO = &buscarUltimaOC("ocdet");
	my $OCDET = "$grupo/oc/ocdet.$ULTIMO";
	
	if( ! $OCDET ){
	    print "Error: No se encontro el archivo de descripción de ordenes de compra.";
	    &Glog("No se encontro el archivo de descripción de ordenes de compra.", "SE");
	    return 9;
	}

	#Procesa cada detalle de orden de compra utilizando los
	#remitos elegidos
	&procesarOrden($OCDET, \@OC, \@REMITOS);
    }
    else{
	print "Error: No se especifico nungun remito/orden de compra.\n";
	&Glog("No se especifico nungun remito/orden de compra.", "E");
	return 10;
    }
}


my $retorno = &main;

`/bin/bash -c "desbloquearProceso $0"`;

exit $retorno;

