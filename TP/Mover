#! /bin/bash

# Salidas:  0 - OK
#           1 - Error de parámetros
#           2 - Archivo inexistente
#           3 - Directorio inexistente

DUP="dup"
ESCRIBIR_LOG=0
#NOMBRE_LOG=`glog "$0"`

#verifica la existencia de un archivo. Si no existe, muestra un error
#y sale.
verificar_existencia_de_archivo(){
}

funcion_Mover(){
#Primero verificamos que la cantidad de parametros sea como minimo 2 (dos)
    if [ $# -le 1 ]
    then
	echo "Error: el comando necesita al menos 2 (dos) parametros"
    #mostrar_invocacion()
	return 1
    fi

    if [ $# -ge 3 ]
    then
	case "$3" in
	    "invreci") ESCRIBIR_LOG=1 ;;
	    "remioc")  ESCRIBIR_LOG=1 ;;
	esac
    fi

    #verificamos que exista el primer archivo
    if [ ! -e "$1" ]
    then
	echo "Error: El archivo $1 no existe."
	return 2
    fi

#Verificamos que origen y destino no sean iguales
    if [ "$1" = "$2" ]
    then
	echo "Origen y destino son iguales"
	return 0
    fi

#idem, pero para el caso que el segundo parámetro sea un directorio
    if [ -d "$2" ] 
    then
	directorio=`dirname "$1"`
    #!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	if [ "$directorio" = "." ]
	then
	    directorio=`pwd`
	fi

	if [ "$directorio" = "$2" ]
	then
	    echo "Origen y destino son iguales"
	    return 0
	fi
    fi


    directorio="${2%/*}"
    echo "el directorio es $directorio"
    if [ ! -d  "$directorio" ]
    then
	echo "Error: El directorio $2 no existe."
	return 3
    fi

    archivo="${2##*/}"

    if [ "$archivo" = "" ]
    then
	archivo=`basename "$1"`
    fi 

    echo "el archivo es $archivo"
    if [ -e "$directorio/$archivo" ]
    then
    #si existe, es un archivo duplicado
	if [ ! -d "$directorio/$DUP" ]
	then
	#si no existe el directorio de duplicados, lo creo
	    rm -f "$directorio/$DUP" > /dev/null 2> /dev/null
	    mkdir "$directorio/$DUP"
	fi
	
	numero=0
	for i in "$directorio/$DUP/$archivo".*
	do
	    echo "archivo: $i"

	    actual="${i##*.}"
	    echo "actual = $actual"
	    if [ "$actual" != "*" ] 
	    then
		if [ $actual -ge $numero ]
		then
		    numero=$(( $actual + 1 ))
		fi
	    fi
	done
	numero=`printf "%.3i" $numero`
	mv "$1" "$directorio/$DUP/$archivo.$numero"
    else
	mv "$1" "$directorio/$archivo"
    fi

    return 0
}
